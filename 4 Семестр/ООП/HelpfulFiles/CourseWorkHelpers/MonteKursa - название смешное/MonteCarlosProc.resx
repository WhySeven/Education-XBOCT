<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>